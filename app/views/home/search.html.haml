/ ng-controller="SearchCtrl" not required if you have routing enabled
- meta :title => "Lorious | Search for Experts"
.container-search.wrapper{"ng-app" => "search"}
  .row{"ng-controller" => "SearchCtrl"}
    .col-xs-4.nav.nav-list.nav-list-vivid
      %br/
      %h4 Search:
      .control-group
        %input.form-control{"ng-init" => "query.$=default_keyword", "ng-model" => "query.$", :placeholder => "Keyword", :type => "text"}
      %h4 Skills:
      .control-group
        %select.form-control{:chosen => "", "data-placeholder" => "TAG", :multiple => "", "ng-model" => "selectedTags", "ng-options" => "f.tag for f in model.facets", "no-results-text" => "'Could not find TAG'", :style => "width: 100%;"}
      %h4 Location:
      %link{:href => "https://fonts.googleapis.com/css?family=Roboto:300,400,500", :rel => "stylesheet", :type => "text/css"}/
      %script{:src => "https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"}
      :javascript
        var placeSearch, autocomplete;
        window.onload= function initialize() {
          // Create the autocomplete object, restricting the search
          // to geographical location types.
          autocomplete = new google.maps.places.Autocomplete(
              /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
              { types: ['(cities)']/*, componentRestrictions: {country: "us"} */});
          // When the user selects an address from the dropdown,
          // populate the address fields in the form.
          google.maps.event.addListener(autocomplete, 'place_changed', function() {
            try{
        	   	angular.element(document.getElementById('AngularCtrl')).scope().$apply(function(scope){
        	   		scope.query.location = autocomplete.getPlace().formatted_address;
        	        scope.getFilteredValues();
        	    });
        	}
        	catch(e){
        		//do nothing
        	}
          });
        }
        function geolocate() {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              var geolocation = new google.maps.LatLng(
                  position.coords.latitude, position.coords.longitude);
              autocomplete.setBounds(new google.maps.LatLngBounds(geolocation,
                  geolocation));
            });
          }
        }
      .control-group
        %input#autocomplete.form-control.locationbox{"ng-model" => "query.location", :onfocus => "geolocate()", :placeholder => "Location", :type => "text"}/
      %h4 Price/Hr.
      %div{:max => "2000", :min => "0", "ng-init" => "slider=[0,2000]", "ng-model" => "slider", :step => "50", :style => "margin-left:5%; width: 50%;", "ui-slider" => "{range: true}", "use-decimals" => ""}
      %h5.text-left Between $ {{slider[0] }} & {{slider[1] }}
      %h3 Rating:
      \&nbsp;&nbsp;&nbsp;
      %input{"ng-model" => "ratings.five", :type => "checkbox"}/
      %rating{:max => "max", "on-hover" => "hoveringOver(value)", "on-leave" => "overStar = null", :readonly => "isReadonly", :value => "5"}
      %br/
      \&nbsp;&nbsp;&nbsp;
      %input{"ng-model" => "ratings.four", :type => "checkbox"}/
      %rating{:max => "max", "on-hover" => "hoveringOver(value)", "on-leave" => "overStar = null", :readonly => "isReadonly", :value => "4"}
      %br/
      \&nbsp;&nbsp;&nbsp;
      %input{"ng-model" => "ratings.three", :type => "checkbox"}/
      %rating{:max => "max", "on-hover" => "hoveringOver(value)", "on-leave" => "overStar = null", :readonly => "isReadonly", :value => "3"}
      %br/
      \&nbsp;&nbsp;&nbsp;
      %input{"ng-model" => "ratings.two", :type => "checkbox"}/
      %rating{:max => "max", "on-hover" => "hoveringOver(value)", "on-leave" => "overStar = null", :readonly => "isReadonly", :value => "2"}
      %br/
      \&nbsp;&nbsp;&nbsp;
      %input{"ng-model" => "ratings.one", :type => "checkbox"}/
      %rating{:max => "max", "on-hover" => "hoveringOver(value)", "on-leave" => "overStar = null", :readonly => "isReadonly", :value => "1"}
      %br/
      %br/
      %br/
      %br/
    .col-xs-8
      %ng:include{:src => "'#{asset_path("search-list.html")}'"}
