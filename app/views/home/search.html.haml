/ ng-controller="SearchCtrl" not required if you have routing enabled
- meta :title => "Lorious | Search for Experts"
.container-search.wrapper{"ng-app" => "search", "ng-controller" => "SearchCtrl", "ng-cloak" => true}
  .row
    .col-md-3.nav.nav-list.nav-list-vivid.search-nav-list
      %li.nav-header Keywords:
      .control-group
        %input.form-control{"ng-init" => "query.$=default_keyword", "ng-model" => "query.$", :placeholder => "Keyword", :type => "text", "ng-change" => "changeSearchQuery()"}
      %hr.search-hr
      %li.nav-header Price/Hr.
      %div{:max => "2000", :min => "0", "ng-init" => "slider=[0,2000]", "ng-model" => "slider", :step => "50", "ui-slider" => "{range: true}", "use-decimals" => "", :class => "search-hourly-rate-slider"}
        %span.ui-slider-value.first ${{slider[0]}}
        %span.ui-slider-value.last ${{slider[1]}}
      .clearfix
      %hr.search-hr
      %li.nav-header Skills:
      %li{ "ng-repeat" => "facet in model.facets | limitTo:facetLimit",
           "ng-class" => "{active: facet.selected}" }
        %a{ href: true, "ng-click" => "facet.selected = !facet.selected" }
          {{ facet.tag }}
      %li{ "ng-show" => "shouldShowMoreLink()" }
        %a{ href: true, "ng-click" => "unscreenFacets()" } More...
      %hr.search-hr
      %li.nav-header Location:
      %link{:href => "https://fonts.googleapis.com/css?family=Roboto:300,400,500", :rel => "stylesheet", :type => "text/css"}/
      %script{:src => "https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false&libraries=places"}
      :javascript
        var placeSearch, autocomplete;
        window.onload= function initialize() {
          // Create the autocomplete object, restricting the search
          // to geographical location types.
          autocomplete = new google.maps.places.Autocomplete(
              /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
              { types: ['(cities)']/*, componentRestrictions: {country: "us"} */});
          // When the user selects an address from the dropdown,
          // populate the address fields in the form.
          google.maps.event.addListener(autocomplete, 'place_changed', function() {
            try{
        	   	angular.element(document.getElementById('AngularCtrl')).scope().$apply(function(scope){
        	   		scope.query.location = autocomplete.getPlace().formatted_address;
        	        scope.getFilteredValues();
        	    });
        	}
        	catch(e){
        		//do nothing
        	}
          });
        }
        function geolocate() {
          if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
              var geolocation = new google.maps.LatLng(
                  position.coords.latitude, position.coords.longitude);
              autocomplete.setBounds(new google.maps.LatLngBounds(geolocation,
                  geolocation));
            });
          }
        }
      .control-group
        %input#autocomplete.form-control.locationbox{"ng-model" => "query.location", :onfocus => "geolocate()", :placeholder => "Location", :type => "text"}/
    .col-md-9
      %ng:include{:src => "'#{asset_path("search-list.html")}'"}
